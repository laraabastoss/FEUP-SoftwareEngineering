// Mocks generated by Mockito 5.4.0 from annotations
// in brain_box/test/comment_writer_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i4;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:firebase_database/firebase_database.dart' as _i3;
import 'package:firebase_database_platform_interface/firebase_database_platform_interface.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseReference_1 extends _i1.SmartFake
    implements _i3.DatabaseReference {
  _FakeDatabaseReference_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_2 extends _i1.SmartFake
    implements _i4.ActionCodeInfo {
  _FakeActionCodeInfo_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_3 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_4 extends _i1.SmartFake
    implements _i5.ConfirmationResult {
  _FakeConfirmationResult_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionResult_5 extends _i1.SmartFake
    implements _i3.TransactionResult {
  _FakeTransactionResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOnDisconnect_6 extends _i1.SmartFake implements _i3.OnDisconnect {
  _FakeOnDisconnect_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataSnapshot_7 extends _i1.SmartFake implements _i3.DataSnapshot {
  _FakeDataSnapshot_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseEvent_8 extends _i1.SmartFake implements _i3.DatabaseEvent {
  _FakeDatabaseEvent_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuery_9 extends _i1.SmartFake implements _i3.Query {
  _FakeQuery_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_10 extends _i1.SmartFake implements _i4.UserMetadata {
  _FakeUserMetadata_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_11 extends _i1.SmartFake implements _i5.MultiFactor {
  _FakeMultiFactor_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_12 extends _i1.SmartFake implements _i4.IdTokenResult {
  _FakeIdTokenResult_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_13 extends _i1.SmartFake implements _i5.User {
  _FakeUser_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDatabase extends _i1.Mock implements _i3.FirebaseDatabase {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
        Invocation.setter(
          #databaseURL,
          _databaseURL,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  void useDatabaseEmulator(
    String? host,
    int? port,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #useDatabaseEmulator,
          [
            host,
            port,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.DatabaseReference reference() => (super.noSuchMethod(
        Invocation.method(
          #reference,
          [],
        ),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #reference,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #reference,
            [],
          ),
        ),
      ) as _i3.DatabaseReference);
  @override
  _i3.DatabaseReference ref([String? path]) => (super.noSuchMethod(
        Invocation.method(
          #ref,
          [path],
        ),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #ref,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #ref,
            [path],
          ),
        ),
      ) as _i3.DatabaseReference);
  @override
  _i3.DatabaseReference refFromURL(String? url) => (super.noSuchMethod(
        Invocation.method(
          #refFromURL,
          [url],
        ),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #refFromURL,
            [url],
          ),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #refFromURL,
            [url],
          ),
        ),
      ) as _i3.DatabaseReference);
  @override
  void setPersistenceEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setPersistenceEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPersistenceCacheSizeBytes(int? cacheSize) => super.noSuchMethod(
        Invocation.method(
          #setPersistenceCacheSizeBytes,
          [cacheSize],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setLoggingEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setLoggingEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> goOnline() => (super.noSuchMethod(
        Invocation.method(
          #goOnline,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> goOffline() => (super.noSuchMethod(
        Invocation.method(
          #goOffline,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> purgeOutstandingWrites() => (super.noSuchMethod(
        Invocation.method(
          #purgeOutstandingWrites,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i6.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> useAuthEmulator(
    String? host,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i4.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i6.Future<_i4.ActionCodeInfo>.value(_FakeActionCodeInfo_2(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.ActionCodeInfo>.value(_FakeActionCodeInfo_2(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i6.Future<_i4.ActionCodeInfo>);
  @override
  _i6.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i5.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);
  @override
  _i6.Future<_i5.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i6.Stream<_i5.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i6.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i6.Stream<_i5.User?>.empty(),
      ) as _i6.Stream<_i5.User?>);
  @override
  _i6.Stream<_i5.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i6.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i6.Stream<_i5.User?>.empty(),
      ) as _i6.Stream<_i5.User?>);
  @override
  _i6.Stream<_i5.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i6.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i6.Stream<_i5.User?>.empty(),
      ) as _i6.Stream<_i5.User?>);
  @override
  _i6.Future<void> sendPasswordResetEmail({
    required String? email,
    _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> setSettings({
    bool? appVerificationDisabledForTesting,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> setPersistence(_i4.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i5.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> signInWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> signInWithAuthProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> signInWithProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i6.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_4(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_4(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i6.Future<_i5.ConfirmationResult>);
  @override
  _i6.Future<_i5.UserCredential> signInWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<void> signInWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i6.Future<String>.value(''),
        returnValueForMissingStub: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i4.PhoneMultiFactorInfo? multiFactorInfo,
    required _i4.PhoneVerificationCompleted? verificationCompleted,
    required _i4.PhoneVerificationFailed? verificationFailed,
    required _i4.PhoneCodeSent? codeSent,
    required _i4.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i4.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [DatabaseReference].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseReference extends _i1.Mock implements _i3.DatabaseReference {
  @override
  _i3.DatabaseReference get root => (super.noSuchMethod(
        Invocation.getter(#root),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.getter(#root),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.getter(#root),
        ),
      ) as _i3.DatabaseReference);
  @override
  _i3.DatabaseReference get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i3.DatabaseReference);
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i6.Stream<_i3.DatabaseEvent> get onChildAdded => (super.noSuchMethod(
        Invocation.getter(#onChildAdded),
        returnValue: _i6.Stream<_i3.DatabaseEvent>.empty(),
        returnValueForMissingStub: _i6.Stream<_i3.DatabaseEvent>.empty(),
      ) as _i6.Stream<_i3.DatabaseEvent>);
  @override
  _i6.Stream<_i3.DatabaseEvent> get onChildRemoved => (super.noSuchMethod(
        Invocation.getter(#onChildRemoved),
        returnValue: _i6.Stream<_i3.DatabaseEvent>.empty(),
        returnValueForMissingStub: _i6.Stream<_i3.DatabaseEvent>.empty(),
      ) as _i6.Stream<_i3.DatabaseEvent>);
  @override
  _i6.Stream<_i3.DatabaseEvent> get onChildChanged => (super.noSuchMethod(
        Invocation.getter(#onChildChanged),
        returnValue: _i6.Stream<_i3.DatabaseEvent>.empty(),
        returnValueForMissingStub: _i6.Stream<_i3.DatabaseEvent>.empty(),
      ) as _i6.Stream<_i3.DatabaseEvent>);
  @override
  _i6.Stream<_i3.DatabaseEvent> get onChildMoved => (super.noSuchMethod(
        Invocation.getter(#onChildMoved),
        returnValue: _i6.Stream<_i3.DatabaseEvent>.empty(),
        returnValueForMissingStub: _i6.Stream<_i3.DatabaseEvent>.empty(),
      ) as _i6.Stream<_i3.DatabaseEvent>);
  @override
  _i6.Stream<_i3.DatabaseEvent> get onValue => (super.noSuchMethod(
        Invocation.getter(#onValue),
        returnValue: _i6.Stream<_i3.DatabaseEvent>.empty(),
        returnValueForMissingStub: _i6.Stream<_i3.DatabaseEvent>.empty(),
      ) as _i6.Stream<_i3.DatabaseEvent>);
  @override
  _i3.DatabaseReference child(String? path) => (super.noSuchMethod(
        Invocation.method(
          #child,
          [path],
        ),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
      ) as _i3.DatabaseReference);
  @override
  _i3.DatabaseReference push() => (super.noSuchMethod(
        Invocation.method(
          #push,
          [],
        ),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #push,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.method(
            #push,
            [],
          ),
        ),
      ) as _i3.DatabaseReference);
  @override
  _i6.Future<void> set(Object? value) => (super.noSuchMethod(
        Invocation.method(
          #set,
          [value],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> setWithPriority(
    Object? value,
    Object? priority,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWithPriority,
          [
            value,
            priority,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> update(Map<String, Object?>? value) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [value],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> setPriority(Object? priority) => (super.noSuchMethod(
        Invocation.method(
          #setPriority,
          [priority],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> remove() => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i3.TransactionResult> runTransaction(
    _i7.TransactionHandler? transactionHandler, {
    bool? applyLocally = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTransaction,
          [transactionHandler],
          {#applyLocally: applyLocally},
        ),
        returnValue:
            _i6.Future<_i3.TransactionResult>.value(_FakeTransactionResult_5(
          this,
          Invocation.method(
            #runTransaction,
            [transactionHandler],
            {#applyLocally: applyLocally},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.TransactionResult>.value(_FakeTransactionResult_5(
          this,
          Invocation.method(
            #runTransaction,
            [transactionHandler],
            {#applyLocally: applyLocally},
          ),
        )),
      ) as _i6.Future<_i3.TransactionResult>);
  @override
  _i3.OnDisconnect onDisconnect() => (super.noSuchMethod(
        Invocation.method(
          #onDisconnect,
          [],
        ),
        returnValue: _FakeOnDisconnect_6(
          this,
          Invocation.method(
            #onDisconnect,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeOnDisconnect_6(
          this,
          Invocation.method(
            #onDisconnect,
            [],
          ),
        ),
      ) as _i3.OnDisconnect);
  @override
  _i6.Future<_i3.DataSnapshot> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i6.Future<_i3.DataSnapshot>.value(_FakeDataSnapshot_7(
          this,
          Invocation.method(
            #get,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.DataSnapshot>.value(_FakeDataSnapshot_7(
          this,
          Invocation.method(
            #get,
            [],
          ),
        )),
      ) as _i6.Future<_i3.DataSnapshot>);
  @override
  _i6.Future<_i3.DatabaseEvent> once(
          [_i7.DatabaseEventType? eventType = _i7.DatabaseEventType.value]) =>
      (super.noSuchMethod(
        Invocation.method(
          #once,
          [eventType],
        ),
        returnValue: _i6.Future<_i3.DatabaseEvent>.value(_FakeDatabaseEvent_8(
          this,
          Invocation.method(
            #once,
            [eventType],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.DatabaseEvent>.value(_FakeDatabaseEvent_8(
          this,
          Invocation.method(
            #once,
            [eventType],
          ),
        )),
      ) as _i6.Future<_i3.DatabaseEvent>);
  @override
  _i3.Query startAt(
    Object? value, {
    String? key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAt,
          [value],
          {#key: key},
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #startAt,
            [value],
            {#key: key},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #startAt,
            [value],
            {#key: key},
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query startAfter(
    Object? value, {
    String? key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfter,
          [value],
          {#key: key},
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #startAfter,
            [value],
            {#key: key},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #startAfter,
            [value],
            {#key: key},
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query endAt(
    Object? value, {
    String? key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAt,
          [value],
          {#key: key},
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #endAt,
            [value],
            {#key: key},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #endAt,
            [value],
            {#key: key},
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query endBefore(
    Object? value, {
    String? key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBefore,
          [value],
          {#key: key},
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #endBefore,
            [value],
            {#key: key},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #endBefore,
            [value],
            {#key: key},
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query equalTo(
    Object? value, {
    String? key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #equalTo,
          [value],
          {#key: key},
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #equalTo,
            [value],
            {#key: key},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #equalTo,
            [value],
            {#key: key},
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query limitToFirst(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limitToFirst,
          [limit],
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #limitToFirst,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #limitToFirst,
            [limit],
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query limitToLast(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limitToLast,
          [limit],
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query orderByChild(String? path) => (super.noSuchMethod(
        Invocation.method(
          #orderByChild,
          [path],
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByChild,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByChild,
            [path],
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query orderByKey() => (super.noSuchMethod(
        Invocation.method(
          #orderByKey,
          [],
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByKey,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByKey,
            [],
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query orderByValue() => (super.noSuchMethod(
        Invocation.method(
          #orderByValue,
          [],
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByValue,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByValue,
            [],
          ),
        ),
      ) as _i3.Query);
  @override
  _i3.Query orderByPriority() => (super.noSuchMethod(
        Invocation.method(
          #orderByPriority,
          [],
        ),
        returnValue: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByPriority,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9(
          this,
          Invocation.method(
            #orderByPriority,
            [],
          ),
        ),
      ) as _i3.Query);
  @override
  _i6.Future<void> keepSynced(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #keepSynced,
          [value],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i4.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_10(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeUserMetadata_10(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i4.UserMetadata);
  @override
  List<_i4.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i4.UserInfo>[],
        returnValueForMissingStub: <_i4.UserInfo>[],
      ) as List<_i4.UserInfo>);
  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i5.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_11(
          this,
          Invocation.getter(#multiFactor),
        ),
        returnValueForMissingStub: _FakeMultiFactor_11(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i5.MultiFactor);
  @override
  _i6.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i6.Future<String>.value(''),
        returnValueForMissingStub: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i4.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i6.Future<_i4.IdTokenResult>.value(_FakeIdTokenResult_12(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.IdTokenResult>.value(_FakeIdTokenResult_12(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i6.Future<_i4.IdTokenResult>);
  @override
  _i6.Future<_i5.UserCredential> linkWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> linkWithProvider(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> reauthenticateWithProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<_i5.UserCredential> reauthenticateWithPopup(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<void> reauthenticateWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i5.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<void> linkWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i5.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i6.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_4(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_4(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i6.Future<_i5.ConfirmationResult>);
  @override
  _i6.Future<_i5.UserCredential> reauthenticateWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i6.Future<_i5.UserCredential>);
  @override
  _i6.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> sendEmailVerification(
          [_i4.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i5.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i6.Future<_i5.User>.value(_FakeUser_13(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i5.User>.value(_FakeUser_13(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i6.Future<_i5.User>);
  @override
  _i6.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> updatePhoneNumber(
          _i4.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [DataSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataSnapshot extends _i1.Mock implements _i3.DataSnapshot {
  @override
  _i3.DatabaseReference get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeDatabaseReference_1(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub: _FakeDatabaseReference_1(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i3.DatabaseReference);
  @override
  bool get exists => (super.noSuchMethod(
        Invocation.getter(#exists),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  Iterable<_i3.DataSnapshot> get children => (super.noSuchMethod(
        Invocation.getter(#children),
        returnValue: <_i3.DataSnapshot>[],
        returnValueForMissingStub: <_i3.DataSnapshot>[],
      ) as Iterable<_i3.DataSnapshot>);
  @override
  bool hasChild(String? path) => (super.noSuchMethod(
        Invocation.method(
          #hasChild,
          [path],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i3.DataSnapshot child(String? path) => (super.noSuchMethod(
        Invocation.method(
          #child,
          [path],
        ),
        returnValue: _FakeDataSnapshot_7(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeDataSnapshot_7(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
      ) as _i3.DataSnapshot);
}
